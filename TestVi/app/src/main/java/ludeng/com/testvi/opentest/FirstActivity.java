package ludeng.com.testvi.opentest;

import android.app.Activity;
import android.content.ActivityNotFoundException;
import android.content.Intent;
import android.net.VpnService;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;

import com.example.opentest.R;

import java.io.IOException;

import ludeng.com.testvi.vpnspl.VpnProfile;
import ludeng.com.testvi.vpnspl.core.ProfileManager;
import ludeng.com.testvi.vpnspl.core.VPNLaunchHelper;
import ludeng.com.testvi.vpnspl.core.VpnStatus;
import ludeng.com.testvi.vpnspl.core.VpnStatus.ConnectionStatus;
import ludeng.com.testvi.vpnspl.utils.VpnUtils;

public class FirstActivity extends Activity implements View.OnClickListener {



    private static final int START_VPN_PROFILE= 70;

    Button startvpn;
    Button stopvpn;
    private ludeng.com.testvi.vpnspl.VpnProfile profile;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_first);

        initviews();

        initdatas();
    }

    private void launchVPN() {



        Intent intent = VpnService.prepare(this);



        if (intent != null) {

            try {
                startActivityForResult(intent, START_VPN_PROFILE);
            } catch (ActivityNotFoundException ane) {
                // Shame on you Sony! At least one user reported that
                // an official Sony Xperia Arc S image triggers this exception
                VpnStatus.logError(R.string.no_vpn_support_image);
               // showLogWindow();
            }
        } else {
            onActivityResult(START_VPN_PROFILE, Activity.RESULT_OK, null);
        }
    }



    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if(requestCode==START_VPN_PROFILE) {
            if(resultCode == Activity.RESULT_OK) {

                new startOpenVpnThread().start();
            } else if (resultCode == Activity.RESULT_CANCELED) {
                // User does not want us to start, so we just vanish
                VpnStatus.updateStateString("USER_VPN_PERMISSION_CANCELLED", "", R.string.state_user_vpn_permission_cancelled,
                        ConnectionStatus.LEVEL_NOTCONNECTED);

                finish();
            }
        }
    }



    private void initdatas() {
        addVpnProfile();
        editProfile();
        ProfileManager.getInstance(this).addProfile(profile);
    }

    private void editProfile() {

        profile.mUseLzo = true;
        profile.mPKCS12Password = "";
        try {
            profile.mCaFilename = VpnUtils.getFileData(this,100);
            profile.mClientCertFilename = VpnUtils.getFileData(this,101);
            profile.mClientKeyFilename = VpnUtils.getFileData(this,102);
        } catch (IOException e) {
            Log.i("ICABVIEW","add client wrong");
            e.printStackTrace();
        }


    }

    private void addVpnProfile() {
       profile = new VpnProfile("first");
    }


    private void initviews() {
        startvpn = (Button) findViewById(R.id.startvpn);
        stopvpn  = (Button) findViewById(R.id.stopvpn);
        
        startvpn.setOnClickListener(this);
        stopvpn.setOnClickListener(this);
    }


    @Override
    public void onClick(View v) {
            switch (v.getId()) {
                case R.id.startvpn:
                    startvpn();
                break;
            case R.id.stopvpn:
                    stopvpn();
                break;
        }
    }

    private void stopvpn() {
        Intent disconnectVPN = new Intent(this, DisconnectVPN.class);
        startActivity(disconnectVPN);;
    }

    private void startvpn() {
        launchVPN();
    }


    private class startOpenVpnThread extends Thread {

        @Override
        public void run() {

            VPNLaunchHelper.startOpenVpn(profile, getBaseContext());
          //  finish();
        }

    }
}
